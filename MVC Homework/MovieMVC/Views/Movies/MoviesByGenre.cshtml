@model ApplicationCore.Model.PaginatedResultSet<ApplicationCore.Model.ResponseModel.MovieResponse>

<div class="container mt-5">
    <h2>Movies by Genre</h2>
    <div class="row">
        @foreach (var movie in Model.Data)
        {
            <div class="col-md-3 mb-4">
                @await Html.PartialAsync("_MovieCard", movie)
            </div>
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MoviesByGenre", new { id = ViewBag.GenreId, pageNumber = Model.PageIndex - 1, pageSize = Model.PageSize })">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" href="@Url.Action("MoviesByGenre", new { id = ViewBag.GenreId, pageNumber = i, pageSize = Model.PageSize })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MoviesByGenre", new { id = ViewBag.GenreId, pageNumber = Model.PageIndex + 1, pageSize = Model.PageSize })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
